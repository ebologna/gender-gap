---
title: "Argentina: brecha de género"
author: "Eduardo Bologna"
date: "10/3/2020"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(foreign)
library(ggplot2)
library(ggthemes)
library(doBy)
library(scales)
```


Se compara la evolución de la inserción laboral de mujeres y varones en los aglomerados urbanos de Argentina durate el período 2004-2018. Para hommogeneizar la comparaciónn, solo se toma el primer semestre de cada año.  

# Preliminares
El INDEC pone a disposición las bases de microdatos de la EPH en su sitio https://www.indec.gob.ar/indec/web/Institucional-Indec-BasesDeDatos.  Entre 2004 y 2015 las bases están en formato .dbf y los tres últomos años del período en .txt, por lo que, para la lectura de los archivos, se definen dos listas que contienen las ubicaciones de las bases en cada uno de los formatos.
```{r}
ubicaciones.bases.dbf=list(
  "archivosINDEC\\Ind_t104.dbf","archivosINDEC\\Ind_t105.dbf",
  "archivosINDEC\\Ind_t106.dbf", "archivosINDEC\\Ind_t107.dbf",
  "archivosINDEC\\Ind_t108.dbf", "archivosINDEC\\Ind_t109.dbf",
  "archivosINDEC\\Ind_t110.dbf", "archivosINDEC\\Ind_t111.dbf",
  "archivosINDEC\\Ind_t112.dbf", "archivosINDEC\\Ind_t113.dbf",
  "archivosINDEC\\Ind_t114.dbf", "archivosINDEC\\Ind_t115.dbf")

ubicaciones.bases.txt=list(
  "archivosINDEC\\usu_individual_t316.txt",
  "archivosINDEC\\usu_individual_t117.txt",
  "archivosINDEC\\usu_individual_t118.txt")

```

Y dos vectores que contienen las matrices de datos:

```{r}
eph.dbf=vector("list",12)
for(i  in 1:12) eph.dbf[[i]]=read.dbf(ubicaciones.bases.dbf[[i]])

eph.txt=vector("list",3)
for(i  in 1:3) eph.txt[[i]]=read.csv(ubicaciones.bases.txt[[i]], sep = ";")

```

En los últimos tres años los ingresos salariales nulos o perdidos fueron dejados en blanco, por lo que se los convierte en ceros
```{r}
for(i  in 1:3) eph.txt[[i]]$PP08D1[is.na(eph.txt[[i]]$PP08D1)]=0
```

Se reúnen todas las bases en un único vector
```{r}
eph=vector("list",15)
eph=c(eph.dbf,eph.txt)

```

Se define `sexo` como factor y sus niveles, se restringen las bases a los casos válidos de la variable `ESTADO` y a los mayores ed 14 años de edad, se define `actividad` como la rotulación de `ESTADO`, se define `educacion` como `NIVEL_ED` con el orden corregido y rotulada.
````{r}
for (i in 1:15) {
  eph[[i]]$sexo=as.factor(eph[[i]]$CH04)
  levels(eph[[i]]$sexo)=c("varones", "mujeres")
    eph[[i]]=subset(eph[[i]], eph[[i]]$ESTADO!=0 & eph[[i]]$ESTADO!=4 &
                    eph[[i]]$CH06>14)
    eph[[i]]$actividad=as.factor(eph[[i]]$ESTADO)
  levels(eph[[i]]$actividad)=c("ocupado", "desocupado", "inactivo")
  eph[[i]]$educacion=factor(eph[[i]]$NIVEL_ED,
                            levels(factor(eph[[i]]$NIVEL_ED))[c(7,1:6)])
  levels(eph[[i]]$educacion)=c("Sin instrucción",
                               "Primaria Incompleta",
                               "Primaria Completa","Secundaria Incompleta", "Secundaria Completa",
                               "Universitaria Incompleta","Universitaria Completa")
}

```


# Nivel de actividad económica  
Se define `condact` como 1 para activos y 0 para inactivos a partir de `ESTADO`
```{r}
for (i in 1:15) {
  eph[[i]]$condact=ifelse(eph[[i]]$ESTADO==3, 0, 1)  
}

for (i in 1:15) {
  eph[[i]]$condact=factor(eph[[i]]$condact)
  levels(eph[[i]]$condact)=c("inactivos", "activos")
}

```

Se define una nueva matriz de datos a partir de la tabla que cruza condición de actividad, educación y sexo y se le agrega la proporción de activos en cada categoría de sexo y educación:
```{r}
prop.activos=vector("list",15)
for (i in 1:15) {
  prop.activos[[i]]=as.data.frame(ftable(prop.table(
    table(eph[[i]]$condact, eph[[i]]$educacion, eph[[i]]$sexo),
    c(3,2))))
  names(prop.activos[[i]])=c("condicion", "educacion","sexo", "proporcion")
  
}

```

Se define el vector que alojará los gráficos de esta matriz y se construyen gráficos de barras
```{r}
graficos.condact=vector("list",15)

for (i in 1:15) {
  graficos.condact[[i]]=ggplot(eph[[i]])+
    geom_bar(aes(x=educacion,
                 fill=factor(condact,
                             levels=c("activos","inactivos"))),
             position = "fill")+
    scale_fill_brewer(type = "div",
                      palette = "Set2", direction = 1,
                      aesthetics = "fill")+
    guides(fill=guide_legend(title=NULL))+
    geom_text(
      data=prop.activos[[i]],position=position_stack(vjust=.5),
              size=3, aes(x= educacion, 
                          y=proporcion,label =paste(100*round(proporcion,3),"%")))+
    labs(
      title="Condición de actividad según nivel de educación y sexo",
      subtitle = paste("Argentina. Aglomerados Urbanos primer trimestre",eph[[i]]$ANO4),
      caption="Fuente: Encuesta Permanente de Hogares, INDEC www.indec.gob.ar",
      x="Máximo nivel de educación alcanzado"
    )+theme_economist(base_family = "serif", base_size = 9)+
    theme(axis.line=element_blank(),axis.text.y=element_blank(),
          axis.title.y=element_blank(),
          axis.ticks=element_blank(),legend.title=element_blank(),
          plot.title = element_text(hjust = 0.5))+
    facet_grid(sexo~.)
}

```

Y se guardan como  imágenes en una carpeta exclusiva
```{r}
for(i in 1:15){ 
  ggsave(filename = paste("condiciondeactividad", eph[[i]]$ANO4,
                          ".png"),
         path = "graficos\\condicion_actividad",
         plot = graficos.condact[[i]], device = "png",
         scale = 1.7)
}
```

# Desocupación  
Se restringe la matriz de datos al grupo de quienes tienen actividad económica

```{r}
solo.activos=vector("list", 15)
for (i in 1:15) {
  solo.activos[[i]]=subset(eph[[i]],
                           eph[[i]]$ESTADO==1 | eph[[i]]$ESTADO==2)
  solo.activos[[i]]$actividad=factor(solo.activos[[i]]$actividad) 
}

```

Se generan matrices de datos con la proporción de desocupados respecto del total de activos, según sexo y educación.
```{r}
props.d=vector("list",15)
for (i in 1:15) {
  props.d[[i]]=as.data.frame(ftable(prop.table(
    table(solo.activos[[i]]$actividad, solo.activos[[i]]$educacion,
          solo.activos[[i]]$sexo),
    c(3,2))))
  names(props.d[[i]])=
    c("ocupacion", "educacion","sexo", "proporcion")
} 
```

Se construyen los gráficos de barras y se guardan en su propia carpeta

```{r}
graficos.desocupacion=vector("list", 15)
for (i in 1:15) {
  graficos.desocupacion[[i]]=ggplot(solo.activos[[i]])+
    geom_bar(aes(x=educacion, fill=factor(actividad,
                                          levels=c("desocupado",
                                                   "ocupado"))),
             position = "fill")+
    scale_fill_brewer(type = "div", palette = "Set2", direction = 1,
                      aesthetics = "fill")+
    guides(fill=guide_legend(title=NULL))+
    geom_text(data=props.d[[i]],
              position=position_stack(vjust=0.5), size=3,
              aes(x= educacion,y=proporcion,
                  label =paste(100*round(proporcion,3),"%")))+
    labs(
      title="Condición de ocupación de la población económicamente activa
      según nivel de educación y sexo",
      subtitle = paste("Argentina. Aglomerados Urbanos primer trimestre",eph[[i]]$ANO4),
      caption="Fuente: Encuesta Permanente de Hogares, INDEC www.indec.gob.ar",
      x="Máximo nivel de educación alcanzado"
    )+theme_economist(base_family = "serif", base_size = 9)+
    theme(axis.line=element_blank(),axis.text.y=element_blank(),
          axis.title.y=element_blank(),
          axis.ticks=element_blank(),legend.title=element_blank(),
          plot.title = element_text(hjust = 0.5))+
    facet_grid(sexo~.)
}

for(i in 1:15){ 
  ggsave(filename = paste("desocupación", eph[[i]]$ANO4,
                          ".png"),
         path = "graficos\\desocupacion",
                  plot = graficos.desocupacion[[i]], device = "png",
         scale = 1.7)
}

```

# Categoría ocupacional
De la base que solo  contiene a las personas económicamente activas, se retienen quienes declaran alguna de las tres categorías ocupacionales y se rotulan

```{r}
solo.activos.3.cats=vector("list", 15)
for (i in 1:15) {
  solo.activos.3.cats[[i]]=subset(solo.activos[[i]], solo.activos[[i]]$CAT_OCUP==1 |
            solo.activos[[i]]$CAT_OCUP==2|
            solo.activos[[i]]$CAT_OCUP==3)
  solo.activos.3.cats[[i]]$categoria=
    as.factor(as.character(solo.activos.3.cats[[i]]$CAT_OCUP))
  levels(solo.activos.3.cats[[i]]$categoria)=c("Patrón", "Cuenta propia","Obrero o empleado")
}
```

Se construyen las bases con las proporciones por sexo y educación, se grafica y se guarda
```{r}
props.cats=vector("list",15)
for (i in 1:15) {
  props.cats[[i]]=as.data.frame(ftable(prop.table(
    table(solo.activos.3.cats[[i]]$categoria,
          solo.activos.3.cats[[i]]$educacion,
          solo.activos.3.cats[[i]]$sexo),
    c(3,2))))
  names(props.cats[[i]])=
    c("ocupacion", "educacion","sexo", "proporcion")
}  

graficos.categoria=vector("list", 15)
for (i in 1:15) {
  graficos.categoria[[i]]=ggplot(solo.activos.3.cats[[i]])+
    geom_bar(aes(x=educacion, fill=factor(categoria,
                                          levels=c("Patrón", "Cuenta propia",
                                                   "Obrero o empleado"))),
             position = "fill")+
    scale_fill_brewer(type = "div", palette = "Set2", direction = 1,
                      aesthetics = "fill")+
    guides(fill=guide_legend(title=NULL))+
    geom_text(data=props.cats[[i]],
              position=position_stack(vjust=0.5), size=3,
              aes(x= educacion,y=proporcion,group=ocupacion,
                  label =paste(100*round(proporcion,3),"%")))+
    labs(
      title="Categoría ocupacional según nivel de educación y sexo",
      subtitle = paste("Argentina. Aglomerados Urbanos primer trimestre",eph[[i]]$ANO4),
      caption="Fuente: Encuesta Permanente de Hogares, INDEC www.indec.gob.ar",
      x="Máximo nivel de educación alcanzado"
    )+theme_economist(base_family = "serif", base_size = 9)+
    theme(axis.line=element_blank(),axis.text.y=element_blank(),
          axis.title.y=element_blank(),
          axis.ticks=element_blank(),legend.title=element_blank(),
          plot.title = element_text(hjust = 0.5))+
    facet_grid(sexo~.)
}

for(i in 1:15){ 
  ggsave(filename = paste("categoria", eph[[i]]$ANO4,
                          ".png"),
         path = "graficos\\categoria_ocupacional",
         plot = graficos.categoria[[i]], device = "png",
         scale = 1.7)
}

```

# Precariedad laboral
Se define, par atrabajadores asalariados, como la ausencia simultánea de: vacaciones pagas, aguinaldo, días pagos por enfermedad y obra social; se grafica y se guardan los gráficos

```{r}
precariedad.sexo.educacion=vector("list",15)
for (i in 1:15) {
  precariedad.sexo.educacion[[i]]=
    summaryBy(PP07G_59 ~ sexo+educacion , data = solo.activos[[i]], 
              FUN = function(x) { c(m = mean(x, na.rm = TRUE)/5) })  
}

precariedad.graficos=vector("list", 15)
for (i in 1:15) {
precariedad.graficos[[i]] =ggplot(precariedad.sexo.educacion[[i]])+
  geom_point(aes(
    educacion, sexo, size=100*PP07G_59.m), show.legend = FALSE)+
  geom_text(aes(educacion, sexo,
                label=paste(
                  round(100*PP07G_59.m,0),"%")), vjust=-3.7)+
  scale_size_continuous(
    range = c(3, 27))+xlab("Máximo nivel de educación")+
  ylab("Sexo")+
  labs(
    title="Proporción de asalariados precarios según sexo y nivel de educación",
    subtitle = paste("Argentina. Aglomerados Urbanos primer trimestre",eph[[i]]$ANO4),
    caption="Fuente: Encuesta Permanente de Hogares, INDEC www.indec.gob.ar")+
  theme_economist(base_family = "serif", base_size = 9)
}

for(i in 1:15){ 
  ggsave(filename = paste("precariedad", eph[[i]]$ANO4,
                          ".png"),
         plot = precariedad.graficos[[i]], device = "png",
         path = "graficos\\precariedad",
         scale = 1.7)
}

```

